spring:
  shardingsphere:
    # 数据库配置
    datasource:
      common:
        type: org.springframework.jdbc.datasource.DriverManagerDataSource
        driver-class-name: com.mysql.jdbc.Driver
        username: ins
        password: ins1234
      names: ins
      ins:
        url: jdbc:mysql://106.14.39.4:3306/ins?useUnicode=true&serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false
    # 规则配置
    rules:
      # 数据加密
      encrypt:
        # 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询
        queryWithCipherColumn: true
        # 算法定义
        encryptors:
          encrypt-muses: # 加密算法名称
            type: MUSES # 加密算法类型
            props:
              test: testEncrypt # 加密算法属性配置
        # 表定义
        tables:
          spring_test:
            columns:
              content:
                cipher-column: en_content # 加密列名称
#                assisted-query-column: en_content # 查询列名称
#                plain-column: content # 原文列名称
                encryptor-name: encrypt-muses
#      分片
#      sharding:
#        # 分库
#        default-database-strategy:
#          standard:
#            sharding-columns: id
#            sharding-algorithm-name: database-inline
#        # 分表
#        tables:
#          user:
#            table-strategy:
#              standard:
#                sharding-columns: user_id
#                sharding-algorithm-name: user_table-inline
#            # 完整分片表规则配置
#            actual-data-nodes: ins$->{0..1}
#        sharding-algorithms:
#          # database-inline数据库分片算法（INLINE: 行表达式算法）
#          database-inline:
#            type: INLINE
#            props:
#              algorithm-expression: ins$->{id%2}
#          # user-table-inline表的分片算法
#          user-table-inline:
#            type: INLINE
#            props:
#              algorithm-expression: user_$->{user_id%3}
